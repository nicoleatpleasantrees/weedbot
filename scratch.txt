import streamlit as st

def main():
    # Add CSS styling to change the font
    st.markdown(
        """
        <style>
        body {
            font-family: Arial, sans-serif;
        }
        </style>
        """,
        unsafe_allow_html=True
    )
import streamlit as st
import pandas as pd
from st_files_connection import FilesConnection

st.set_page_config(
    page_title="Pleasantrees Product Explorer",
    page_icon="üåø",
    layout="wide",
    initial_sidebar_state="expanded",
)
with st.sidebar:
    st.image('https://i.ibb.co/FJR389Y/Pleasantrees-logo-sxs-white.png', width=250)
    st.header('Product Explorer')
    st.subheader('Explore our products and find the right one for you!')
    st.caption('Made with ‚ù§Ô∏è by Nicole')
   
        if 'REPLICATE_API_TOKEN' in st.secrets:
        st.success('API key already provided!', icon='‚úÖ')
        replicate_api = st.secrets['REPLICATE_API_TOKEN']
    else:
        replicate_api = st.text_input('Enter Replicate API token:', type='password')
        if not (replicate_api.startswith('r8_') and len(replicate_api)==40):
            st.warning('Please enter your credentials!', icon='‚ö†Ô∏è')
        else:
            st.success('Proceed to entering your prompt message!', icon='üëâ')


conn = st.connection('s3', type=FilesConnection)
df = conn.read('data-streamlit-nicole/recommender_text_v3 - rec_text.csv', input_format='csv', ttl=600)

st.title('Pleasantrees Product Explorer')
# st.dataframe(df)
n = len(pd.unique(df['product_id']))

st.metric('Number of Products', n)
m = len(pd.unique(df['brand_name']))
st.metric('Number of Brands', m)
cat = df.category

add_selectbox = st.sidebar.selectbox(
    'How would you like to shop?',
    ('Browse by category', 'Browse by brand', 'Ask AI!')
)

if add_selectbox == 'Ask AI!':
    message = st.chat_message("assistant")
    message.write("Hello, human. Would you like my help finding a product?")
elif add_selectbox == 'Browse by brand':
    st.write('You selected brand üéÜ')
else:
    st.write('You selected category ü•≥')



if __name__ == "__main__":
    main()
